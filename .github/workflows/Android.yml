name: 构建 Android

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      # ✅ 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ 设置 JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # ✅ 安装 Android SDK 和 NDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          ndk-version: '27.2.12479018'  # 确保与 build.gradle 一致
          cmake-version: '3.18.1'

      # ✅ 清理 Gradle 缓存
      - name: Clean Gradle Cache
        run: |
          echo "Cleaning Gradle cache..."
          ./gradlew clean
          rm -rf ~/.gradle/caches
          echo "Gradle cache cleaned."

      # ✅ 自动检测 NDK 路径
      - name: Configure NDK Path
        run: |
          echo "Configuring NDK path..."
          $ndkRoot = Get-ChildItem "$env:ANDROID_HOME\ndk" | Sort-Object Name -Descending | Select-Object -First 1 -ExpandProperty FullName
          if (-Not (Test-Path $ndkRoot)) {
            throw "NDK path $ndkRoot does not exist. Please verify the NDK installation."
          }
          echo "ndk.dir=$ndkRoot" | Out-File -FilePath "$env:GITHUB_WORKSPACE\android\local.properties" -Encoding utf8 -Append
          echo "NDK path configured to $ndkRoot."

      # ✅ 安装 Flutter
      - name: Install Flutter
        run: |
          echo "Cloning Flutter stable branch..."
          git clone https://github.com/flutter/flutter.git -b stable
          echo "Adding Flutter to PATH..."
          echo "$env:GITHUB_WORKSPACE\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "Flutter installation completed."

      # ✅ 安装 Flutter 依赖
      - name: Install Flutter dependencies
        run: |
          echo "Fetching Flutter dependencies..."
          flutter pub get
          echo "Flutter dependencies installed."

      # ✅ 构建 Flutter Android Release APK
      - name: Build Flutter Android Release
        run: |
          echo "Building Flutter Android Release..."
          flutter build apk --release
          echo "Flutter Android Release build completed."

      # ✅ 压缩 APK
      - name: Compress APK
        run: |
          echo "Compressing APK..."
          $apkFile = "$env:GITHUB_WORKSPACE\build\app\outputs\apk\release\app-release.apk"
          $zipFile = "$env:GITHUB_WORKSPACE\release.zip"
          Compress-Archive -Path $apkFile -DestinationPath $zipFile
          echo "APK compressed to $zipFile."

      # ✅ 上传 APK 到 GitHub Artifact
      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: ${{ github.workspace }}/release.zip
