name: 构建 Android

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          ndk-version: '27.2.12479018'  # Updated NDK version
          cmake-version: '3.18.1'

      - name: List Installed NDK Versions
        run: |
          echo "Listing installed NDK versions..."
          $ndkDir = "$env:ANDROID_HOME\ndk"
          if (Test-Path $ndkDir) {
            Get-ChildItem -Path $ndkDir
          } else {
            echo "NDK directory $ndkDir does not exist."
          }

      - name: Configure NDK Path
        run: |
          echo "Configuring NDK path..."
          $ndkPath = "$env:ANDROID_HOME\ndk\25.2.9519653"  # Updated NDK version
          if (-Not (Test-Path $ndkPath)) {
            throw "NDK path $ndkPath does not exist. Please verify the NDK installation."
          }
          echo "ndk.dir=$ndkPath" | Out-File -FilePath "$env:GITHUB_WORKSPACE\android\local.properties" -Encoding utf8 -Append
          echo "NDK path configured to $ndkPath."

      - name: Install Flutter
        run: |
          echo "Cloning Flutter stable branch..."
          git clone https://github.com/flutter/flutter.git -b stable
          echo "Adding Flutter to PATH..."
          echo "$env:GITHUB_WORKSPACE\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "Flutter installation completed."

      - name: Install Flutter dependencies
        run: |
          echo "Fetching Flutter dependencies..."
          flutter pub get
          echo "Flutter dependencies installed."

      - name: Build Flutter Android Release
        run: |
          echo "Building Flutter Android Release..."
          flutter build apk --release
          echo "Flutter Android Release build completed."

      - name: Compress Release Directory
        run: |
          echo "Compressing Release directory..."
          $releaseDir = "$env:GITHUB_WORKSPACE\build\app\outputs\apk\release"
          $zipFile = "$env:GITHUB_WORKSPACE\release.zip"
          Compress-Archive -Path $releaseDir -DestinationPath $zipFile
          echo "Release directory compressed to $zipFile."

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: ${{ github.workspace }}/release.zip
